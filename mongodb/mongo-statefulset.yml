apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo # Nama StatefulSet
  labels:
    app: mongo # Label aplikasi
spec:
  replicas: 1 # Jumlah replika StatefulSet
  serviceName: mongo # Nama layanan yang akan digunakan oleh StatefulSet
  selector:
    matchLabels:
      app: mongo
      tier: data
  minReadySeconds: 10 # Jumlah waktu minimum yang harus dijalankan oleh pod baru sebelum dianggap siap
  template:
    metadata:
      labels:
        app: mongo
        tier: data
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongo # Nama kontainer
        image: mongo:4.4 # Menggunakan image mongo 4.4 
        ports:
        - containerPort: 27017 # Port yang akan digunakan oleh kontainer
        env:
        - name: MONGO_INITDB_ROOT_USERNAME_FILE
          value: /etc/mongo-credentials/MONGO_ROOT_USERNAME # Path ke file username root MongoDB
        - name: MONGO_INITDB_ROOT_PASSWORD_FILE
          value: /etc/mongo-credentials/MONGO_ROOT_PASSWORD # Path ke file password root MongoDB
        volumeMounts:
        - name: mongo-persistent-storage # Nama volume untuk penyimpanan persisten MongoDB
          mountPath: /data/db # Path di dalam kontainer tempat volume akan dipasang
        - name: mongo-config
          mountPath: /config # Path di dalam kontainer untuk mount ConfigMap
        - name: mongo-credentials
          mountPath: /etc/mongo-credentials # Path di dalam kontainer untuk mount Secret
      volumes:
      - name: mongo-persistent-storage # Nama volume persisten
        persistentVolumeClaim:
          claimName: mongo-pvc # Nama klaim volume persisten yang akan digunakan
      - name: mongo-config
        configMap:
          name: mongo-config # Nama ConfigMap yang akan digunakan
          items:
          - key: mongo.conf
            path: mongo.conf # Path di dalam kontainer tempat file ConfigMap akan dipasang
      - name: mongo-credentials
        secret:
          secretName: mongo-credentials # Nama Secret yang akan digunakan